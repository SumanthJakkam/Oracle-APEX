CREATE OR REPLACE PACKAGE TC_PROJECT_CONFIG_PKG
AS

FUNCTION PROJECT_EXISTS_CHECK(P_PROJECT_NAME    VARCHAR2)
RETURN NUMBER;

PROCEDURE CREATE_PROJECT(P_PROJECT_NAME   VARCHAR2,
                         P_START_DATE     DATE,
						 P_END_DATE       DATE,
						 X_PROJECT_ID  OUT  NUMBER,
						 X_STATUS      OUT VARCHAR2,
						 X_ERR_MSG     OUT VARCHAR2
						   );
						   
PROCEDURE UPDATE_PROJECT(P_PROJECT_ID    NUMBER,
                         P_PROJECT_NAME  VARCHAR2,
						 P_END_DATE      DATE,
						 X_STATUS      OUT VARCHAR2,
						 X_ERR_MSG     OUT VARCHAR2
						   );


END TC_PROJECT_CONFIG_PKG;
/



create or replace PACKAGE BODY TC_PROJECT_CONFIG_PKG
AS
FUNCTION PROJECT_EXISTS_CHECK(P_PROJECT_NAME    VARCHAR2)
RETURN NUMBER
AS
L_CNT   NUMBER;
BEGIN
SELECT COUNT(*) INTO L_CNT
FROM  TC_PROJECTS
WHERE UPPER(PROJECT_NAME) = UPPER(P_PROJECT_NAME);
RETURN L_CNT;
EXCEPTION
WHEN OTHERS THEN
RETURN -1;
END PROJECT_EXISTS_CHECK;
PROCEDURE CREATE_PROJECT(P_PROJECT_NAME   VARCHAR2,
                         P_START_DATE     DATE,
						 P_END_DATE       DATE,
						 X_PROJECT_ID  OUT  NUMBER,
						 X_STATUS      OUT VARCHAR2,
						 X_ERR_MSG     OUT VARCHAR2
						   )
IS
L_PRJ_CHECK    NUMBER;
L_PROJECT_ID   NUMBER;
BEGIN
L_PRJ_CHECK := PROJECT_EXISTS_CHECK(P_PROJECT_NAME);
IF L_PRJ_CHECK = 0 THEN
L_PROJECT_ID := TC_PROJECTS_SEQ.NEXTVAL;
   INSERT INTO TC_PROJECTS
   VALUES(L_PROJECT_ID,
          P_PROJECT_NAME,
		  P_START_DATE,
		  P_END_DATE,
		  SYSDATE,
		  V('APP_USER'),
		  SYSDATE,
		  V('APP_USER'),
		  V('APP_USER')
		    );
   COMMIT;
   X_STATUS := 'S';
   X_PROJECT_ID := L_PROJECT_ID;
   
ELSIF L_PRJ_CHECK = -1 THEN
   X_STATUS := 'U';
   X_ERR_MSG := 'Something went wrong. PLease check with Admin.';
ELSE
   X_STATUS := 'U';
   X_ERR_MSG := 'Something went wrong. PLease check with Admin.';
END IF;
EXCEPTION
WHEN OTHERS THEN
X_STATUS := 'U';
X_ERR_MSG := 'Something went wrong. PLease check with Admin.';
END CREATE_PROJECT;
PROCEDURE UPDATE_PROJECT(P_PROJECT_ID    NUMBER,
                         P_PROJECT_NAME  VARCHAR2,
						 P_END_DATE      DATE,
						 X_STATUS      OUT VARCHAR2,
						 X_ERR_MSG     OUT VARCHAR2
						   )
IS
BEGIN
IF P_PROJECT_ID IS NOT NULL THEN
   
   UPDATE TC_PROJECTS 
   SET    PROJECT_NAME = P_PROJECT_NAME,
          END_DATE     = P_END_DATE,
		  LAST_UPDATE_DATE = SYSDATE,
		  LAST_UPDATED_BY  = V('APP_USER'),
		  LAST_UPDATE_LOGIN  = V('APP_USER')
   WHERE  PROJECT_ID = P_PROJECT_ID;
   
   IF P_END_DATE IS NOT NULL THEN
      BEGIN
      UPDATE TC_PROJECT_TASKS
      SET    END_DATE = P_END_DATE,
             LAST_UPDATE_DATE = SYSDATE,
		     LAST_UPDATED_BY  = V('APP_USER')
      WHERE  PROJECT_ID = P_PROJECT_ID;
      EXCEPTION 
      WHEN OTHERS THEN
      NULL;
      END;

   ELSIF P_END_DATE IS NULL THEN
      BEGIN
      UPDATE TC_PROJECT_TASKS
      SET    END_DATE = NULL,
             LAST_UPDATE_DATE = SYSDATE,
		     LAST_UPDATED_BY  = V('APP_USER')
      WHERE  PROJECT_ID = P_PROJECT_ID;
      EXCEPTION 
      WHEN OTHERS THEN
      NULL;
      END;
   END IF;

   COMMIT;
   X_STATUS := 'S';
END IF;
EXCEPTION
WHEN OTHERS THEN
X_STATUS := 'U';
X_ERR_MSG := 'Something went wrong. PLease check with Admin.';
END UPDATE_PROJECT;
END TC_PROJECT_CONFIG_PKG;
